CREATE TABLE public.events (
  id SERIAL PRIMARY KEY,
  name VARCHAR(64) NOT NULL UNIQUE,
  number VARCHAR(10) NOT NULL UNIQUE,
  credits FLOAT(3) NOT NULL,
  department VARCHAR(128) NOT NULL,
  degree VARCHAR(64),
  semester VARCHAR(32),
  linkToSyllabus VARCHAR(256),
  slug VARCHAR(128) NOT NULL UNIQUE
);

CREATE TYPE semester AS ENUM ('Vor', 'Sumar', 'Haust', 'HeilsÃ¡rs');

CREATE TABLE public.departments (
  id SERIAL PRIMARY KEY,
  title VARCHAR(64) NOT NULL UNIQUE,
  slug VARCHAR(64) NOT NULL UNIQUE,
  csv VARCHAR(128) NOT NULL UNIQUE,
  slug VARCHAR(128) NOT NULL UNIQUE,
  description VARCHAR(1000) DEFAULT '',
  created TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP,
);

CREATE TABLE public.course (
  id SERIAL PRIMARY KEY,
  course_id VARCHAR(16) NOT NULL UNIQUE,
  department_id INTEGER NOT NULL,
  title VARCHAR(64) NOT NULL UNIQUE,
  units REAL NOT NULL CONSTRAINT units_check CHECK (units > 0),
  semester semester NOT NULL,
  level VARCHAR(128) DEFAULT NULL,
  url VARCHAR(256) DEFAULT NULL,
  slug VARCHAR(64) NOT NULL UNIQUE,
  created TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT fk_department_id FOREIGN KEY (department_id) REFERENCES department(id)
);